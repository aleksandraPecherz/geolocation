{"version":3,"sources":["components/NoData.jsx","components/Map.jsx","components/Info.jsx","components/Message.jsx","components/SearchEngine.jsx","components/ListElement.jsx","components/List.jsx","App.jsx","index.jsx"],"names":["NoData","location","city","ip","mapboxgl","accessToken","Map","currentClass","mapContainerRef","useRef","useEffect","displayedLocation","Object","keys","length","map","container","current","style","center","longitude","latitude","zoom","remove","className","ref","Info","fontSize","getUnicodeFlagIcon","countryCode","isUserInfo","Math","round","region","country","continent","Message","isCorrect","displayedMessage","text","color","filter","element","SearchEngine","getGeolocationDetails","useState","searchedItem","setSearchedItem","setIsCorrect","CheckIfDataIsCorrect","require","isUri","searchedHost","URL","host","CheckUrl","validIp","type","value","onChange","event","target","onClick","ListElement","key","List","listOfUniqueLocation","Set","find","element2","id","App","locationInfo","setLocationInfo","userLocationInfo","setUserLocationInfo","fetch","method","headers","then","res","response","json","data","console","log","locationData","country_name","country_code","countryCapital","capital","continent_name","region_name","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f1ca7d0.chunk.js","sourcesContent":["import React from 'react';\nimport '../App.css';\nfunction NoData({location}) {\n\n    return(   \n        location.city===null?\n        <h3>No information about <i>\"{location.ip}\"</i>. Your IP/URL not exist in database  </h3>:\n        <h3>no information</h3>\n        \n        \n    )\n}\nexport default NoData;\n","import React, { useRef, useEffect } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport \"../App.css\";\nimport NoData from './NoData'\nmapboxgl.accessToken = \"pk.eyJ1IjoiYWxleGFuZHJhcGVibiIsImEiOiJja3BzZ2czbm4wMjl0MzJxd3YwbjdrNDQxIn0.zJZcb2aTj3BlX8xoZ7-VxQ\";\n\nconst Map = ({location, currentClass}) => {\n  const mapContainerRef = useRef(null);\n    \n  useEffect(() => {\n    let displayedLocation\n    if (Object.keys(location).length === 0) return \n    displayedLocation= (location.length) ? location[location.length-1] : location;\n    if (displayedLocation.city===null) return\n    const map = new mapboxgl.Map({\n    container: mapContainerRef.current,\n    style: \"mapbox://styles/alexandrapebn/ckpswwpoa0rkc18oy6k9q2fek\",\n    center: [displayedLocation.longitude, displayedLocation.latitude],\n    zoom: 12.5,\n    });\n     return () => map.remove(); \n  }, [location]);\n\n  return (<div className={currentClass}> \n  {(Object.keys(location).length === 0 || (location.length && location[location.length-1].city==null) ) ? \n  <NoData location={location.length ? location[location.length-1] : []}/> : \n  <div className=\"map\" ref={mapContainerRef} /> }\n  </div>\n  )\n};\n\nexport default Map;\n","import React from 'react';\nimport '../App.css';\nimport NoData from './NoData'\nimport getUnicodeFlagIcon from 'country-flag-icons/unicode'\nfunction Info({location, currentClass}) {\n    let displayedLocation;\n    displayedLocation=(location.length) ? location[location.length-1] : location;\n    if (Object.keys(displayedLocation).length === 0 || displayedLocation.city===null) \n        return (\n            <div className={currentClass}>\n                <NoData location={displayedLocation}/>\n            </div>\n        )\n    \n    return(\n    <div className={currentClass}>\n        <p style={{fontSize: \"60px\"}}>{getUnicodeFlagIcon(`${displayedLocation.countryCode}`)}</p>\n        <h3>{displayedLocation.isUserInfo? `Your IP: ` : `Searched IP: `} {displayedLocation.ip}</h3>\n        <h4>city: {displayedLocation.city}</h4>\n        <p>(<em>{Math.round(displayedLocation.longitude*100)/100} E, {Math.round(displayedLocation.latitude*100)/100} N</em>)</p>\n        <p>region: {displayedLocation.region}</p>\n        <p>country: {displayedLocation.country}</p>\n        <p>continent: {displayedLocation.continent}</p>\n    </div>\n    )\n}\nexport default Info;","import React from 'react';\nimport '../App.css';\nfunction Message({isCorrect}) {\n    const message=[{\n        text: \"write IP address or URL\",\n        isCorrect: null,\n        color: \"black\",\n    },\n    {\n        text: \"Correct\",\n        isCorrect: true,\n        color: \"green\",\n    },\n    {\n        text: \"Incorrect! Plese write ONLY IP address or URL\",\n        isCorrect: false,\n        color: \"red\",\n    }]\n    let displayedMessage = message.filter(element => element.isCorrect === isCorrect)[0]\n    return(\n        <p style={{color:displayedMessage.color}}>{displayedMessage.text}</p>\n    )\n}\nexport default Message;","import React, {useState} from 'react';\nimport '../App.css';\nimport Message from './Message'\n\nfunction SearchEngine({getGeolocationDetails}) {\n    const [searchedItem, setSearchedItem] = useState(\"\")\n    const [isCorrect, setIsCorrect] = useState(null)\n\n    const CheckUrl = () => {\n        const validUrl = require('valid-url');\n        if (validUrl.isUri(searchedItem)){\n            const searchedURL = new URL(searchedItem);\n            const searchedHost = searchedURL.host\n            if (searchedHost===\"\") return false;\n            else {\n                getGeolocationDetails(searchedHost, searchedItem )\n                return true;\n            }\n        }\n    }\n\n    const CheckIP = () => {\n        const validIp = require('is-ip');\n        if(validIp(searchedItem)){\n            getGeolocationDetails(searchedItem);\n            return true;\n        }\n        else return false;\n    }\n    const CheckIfDataIsCorrect =()=>{\n        if (CheckUrl() || CheckIP()) return true\n    }\n    const handleClick =() => {\n        if(CheckIfDataIsCorrect()){\n            setIsCorrect(true)\n            setSearchedItem(\"\")\n        }\n        else setIsCorrect(false)\n    }\n    const handleChange =(event) => setSearchedItem(event.target.value)\n    \n    return(\n    <div className='search-engine'>\n        <div className=\"search\">\n            <input className=\"searchInput\" type=\"text\" value={searchedItem} onChange={handleChange}></input>\n            <button onClick={handleClick}> SEARCH</button>\n        </div>\n        <Message isCorrect ={isCorrect}/>\n    </div>\n    )\n}\nexport default SearchEngine;","import React from 'react';\nimport '../App.css';\nfunction ListElement({element, key, getGeolocationDetails}) {\nconst handleClick =()=>{\n    getGeolocationDetails(element.ip)\n}\nreturn(   \n     <li className=\"list-element\" key={key}>\n        <p className=\"main-information\"> <em>{element.URL!==\"\"?`Searched URL: ${element.URL}`:`Searched IP: ${element.ip}`}</em></p> \n        <p className=\"location-information\">{element.city} , {element.region} , {element.country}</p> \n        <button className=\"go-to-button\" onClick={handleClick}>GO TO</button>\n    </li>\n )\n}\nexport default ListElement;","import React from 'react';\nimport '../App.css';\nimport ListElement from './ListElement.jsx'\nfunction List({location, getGeolocationDetails}) {\n\n    const arrayOfUniqueIp = [...new Set(location.map(element => element.ip ))]\n\n    const listOfUniqueLocation= arrayOfUniqueIp.map( element => \n         (location.find(element2=> element2.ip === element))).map((element)=> \n         \n         <ListElement \n         element={element} \n         key={element.id} \n         getGeolocationDetails={getGeolocationDetails}/>)\n\n    return(   \n        <div className=\"searched-list\">\n            <h2>Last Searched</h2>\n          {listOfUniqueLocation.length? <ul>{listOfUniqueLocation}</ul> : <h3>no data to display</h3>}\n        </div>\n    )\n}\nexport default List;","\nimport './App.css';\nimport React, {useState, useEffect} from 'react';\nimport Map from './components/Map'\nimport Info from './components/Info'\nimport SearchEngine from './components/SearchEngine'\nimport List from './components/List.jsx'\nfunction App() {\n const [locationInfo, setLocationInfo] = useState([]);\n const [userLocationInfo, setUserLocationInfo] = useState([]);\n useEffect(() => {\n   fetch('https://api.ipify.org?format=jsonp?callback=?', {\n     method: 'GET',\n     headers: {},\n   })\n   .then(res => {\n     return res.text()})\n    .then(ip=> {\n      getGeolocationDetails(ip, \"\", true)})}, []);\n      \n  const getGeolocationDetails = (ip, URL=\"\", isUserInfo=false) => {\n      fetch(\n        `http://api.ipstack.com/${ip}?access_key=931c6e8be10d8d3dce7d5ced82e8c7cb`)\n        .then(response => response.json())\n          .then(data => {\n            console.log(data)\n            const locationData = {\n              ip: data.ip,\n              city: data.city,\n              country: data.country_name,\n              countryCode: data.country_code,\n              countryCapital: data.location.capital,\n              continent: data.continent_name,\n              region: data.region_name,\n              isUserInfo: isUserInfo,\n              latitude: data.latitude,\n              longitude: data.longitude,\n              URL: URL\n\n            }     \n              isUserInfo ? setUserLocationInfo(locationData):setLocationInfo([...locationInfo,locationData])\n          });\n        };\n  return (\n    <div className=\"app-container\"> \n      <List \n      location={locationInfo}\n      getGeolocationDetails={getGeolocationDetails} />\n      <Map \n        location={userLocationInfo} \n        currentClass=\"user-map\"/>\n      <Info \n        location={userLocationInfo} \n        currentClass=\"user-info\"/>\n      <SearchEngine getGeolocationDetails={getGeolocationDetails} />\n      <Map \n        location={locationInfo} \n        currentClass=\"searched-map\"/>\n      <Info \n        location={locationInfo} \n        currentClass=\"searched-info\"/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}